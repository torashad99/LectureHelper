services:
  - type: web
    name: lecture-helper-backend
    env: python
        buildCommand: |
      echo "=== Starting Build Process ==="
      echo "Python version:"
      python --version
      echo "Current directory:"
      pwd
      echo "Directory contents:"
      ls -la
      echo "=== Installing Dependencies ==="
      python -m pip install --upgrade pip
      pip install -r requirements.txt || exit 1
      echo "=== Creating Directories ==="
      mkdir -p /opt/render/project/src/data/embeddings
      mkdir -p /opt/render/project/src/data/CS410Transcripts/vtt
      echo "=== Copying Files ==="
      cp -rv backend/* /opt/render/project/src/ || exit 1
      cp -rv CS410Transcripts/vtt/* /opt/render/project/src/data/CS410Transcripts/vtt/ || exit 1
      cp -rv data/embeddings/* /opt/render/project/src/data/embeddings/ || exit 1
      echo "=== Verifying Setup ==="
      python -c "from app import create_app; app=create_app()" || exit 1
    startCommand: |
        echo "Starting application..."
        python -c "import sys; print(f'Python version: {sys.version}')"
        echo "Environment variables set:"
        env | grep -v "KEY"
        echo "Current directory structure:"
        ls -R /opt/render/project/src/
        gunicorn 'app:create_app()' --log-level debug --capture-output --enable-stdio-inheritance
    envVars:
      - key: OPEN_AI_API_KEY
        sync: false
      - key: PYTHON_VERSION
        value: 3.9.0
      - key: PYTHONPATH
        value: /opt/render/project/src
      - key: DATA_DIR
        value: /opt/render/project/src/data/embeddings
      - key: VTT_DIRECTORY
        value: /opt/render/project/src/data/CS410Transcripts/vtt
      - key: TXT_DIRECTORY
        value: /opt/render/project/src/data/CS410Transcripts/txt
    healthCheckPath: /api/health
    autoDeploy: true
    disk:
      name: data
      mountPath: /opt/render/project/src/data
      sizeGB: 1
    buildFilter:
      paths:
        - backend/**
      ignoredPaths:
        - frontend/** 