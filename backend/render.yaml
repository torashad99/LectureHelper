services:
  - type: web
    name: lecture-helper-backend
    env: python
    buildCommand: |
      {
        echo "=== Starting Build Process ===" || true
        python --version || true
        echo "=== Installing Dependencies ===" || true
        python -m pip install --upgrade pip || true
        pip install -r requirements.txt || { echo "Failed to install requirements"; exit 1; }
        echo "=== Creating Directories ===" || true
        mkdir -p /opt/render/project/src/data/embeddings || true
        mkdir -p /opt/render/project/src/data/CS410Transcripts/vtt || true
        mkdir -p /opt/render/project/src/data/CS410Transcripts/txt || true
        echo "=== Copying Files ===" || true
        cp -rv backend/* /opt/render/project/src/ || { echo "Failed to copy backend files: $?"; exit 1; }
        cp -rv data/embeddings/* /opt/render/project/src/data/embeddings/ || true
        cp -rv CS410Transcripts/vtt/* /opt/render/project/src/data/CS410Transcripts/vtt/ || true
        cp -rv CS410Transcripts/txt/* /opt/render/project/src/data/CS410Transcripts/txt/ || true
        echo "=== Verifying Setup ===" || true
        cd /opt/render/project/src && PYTHONPATH=/opt/render/project/src python -c "from app import create_app; print('Importing app...'); app=create_app(); print('App created successfully')" || { echo "Failed to create app: $?"; exit 1; }
      } 2>&1 | tee /opt/render/project/src/build.log
    startCommand: |
      {
        echo "Starting application..." || true
        cd /opt/render/project/src && PYTHONPATH=/opt/render/project/src gunicorn --workers 4 --timeout 120 'app:create_app()' --log-level debug --capture-output --enable-stdio-inheritance
      } 2>&1 | tee /opt/render/project/src/start.log
    envVars:
      - key: PYTHONPATH
        value: /opt/render/project/src
      - key: DATA_DIR
        value: /opt/render/project/src/data/embeddings
      - key: VTT_DIRECTORY
        value: /opt/render/project/src/data/CS410Transcripts/vtt
      - key: TXT_DIRECTORY
        value: /opt/render/project/src/data/CS410Transcripts/txt
    healthCheckPath: /api/health
    autoDeploy: true
    disk:
      name: data
      mountPath: /opt/render/project/src/data
      sizeGB: 1
    buildFilter:
      paths:
        - backend/**
      ignoredPaths:
        - frontend/** 